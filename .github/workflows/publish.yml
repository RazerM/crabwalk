name: Build and Publish

on:
  push:
    tags:
      - "*"
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-12]

    env:
      CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y"
      CIBW_BEFORE_ALL_MACOS: "rustup target add aarch64-apple-darwin"
      CIBW_BUILD_VERBOSITY: "1"
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
      CIBW_SKIP: "*-musllinux_i686 pp*-win_amd64"
      CIBW_ARCHS_MACOS: "auto universal2"
      CIBW_ARCHS_LINUX: "auto aarch64"
      CIBW_CONFIG_SETTINGS: "--build-option=--py-limited-api=cp38"

    steps:
      - uses: actions/checkout@v3

      - name: Limit build to certain wheels as a test since this is not a release
        if: github.event_name == 'pull_request' && runner.os != 'Windows'
        run: |
          echo 'CIBW_BUILD=cp38-* pp38-*' >> $GITHUB_ENV
          echo "CIBW_ARCHS_LINUX=auto" >> $GITHUB_ENV

      - name: Limit build to certain wheels as a test since this is not a release
        if: github.event_name == 'pull_request' && runner.os == 'Windows'
        run: echo 'CIBW_BUILD=cp38-* pp38-*' >> $env:GITHUB_ENV

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.12"

      - name: Build sdist
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel
          python -m pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  publish:
    needs: [build_wheels, build_sdist]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
