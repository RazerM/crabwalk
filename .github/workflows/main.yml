---
name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  UV_NO_SYNC: "1"

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: "actions/checkout@v4"
      - uses: "astral-sh/setup-uv@v3"
      - uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"
      - run: rustup component add llvm-tools-preview
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          rustc --version
          python -m site
          uv --version
          uv sync --no-install-project --no-dev --group nox --group coverage
      - name: "Run nox targets for ${{ matrix.python-version }}"
        run: "uv run nox --python ${{ matrix.python-version }}"
      - name: "Convert coverage"
        run: |
          uv run coverage combine
          uv run coverage xml
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  msrv:
    name: "Python ${{ matrix.python-version }} with Rust ${{ matrix.rust-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        rust-version: ["1.65.0"]

    steps:
      - uses: "actions/checkout@v4"
      - uses: "astral-sh/setup-uv@v3"
      - uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: dtolnay/rust-toolchain@7b1c307e0dcbda6122208f10795a713336a9b35a
        with:
          toolchain: ${{ matrix.rust-version }}
      - run: rustup component add llvm-tools-preview
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          rustc --version
          python -m site
          uv --version
          uv sync --no-install-project --no-dev --group nox
      - name: "Run nox"
        run: "uv run nox --python ${{ matrix.python-version }} -e tests"
